{"version":3,"names":["SwitchRouter","NavigationActions","DrawerActions","withDefaultValue","obj","key","defaultValue","hasOwnProperty","getActiveRouteKey","route","routes","index","routeConfigs","config","unmountInactiveRoutes","resetOnBlur","switchRouter","getActionCreators","navStateKey","openDrawer","closeDrawer","toggleDrawer","getStateForAction","action","state","undefined","isDrawerOpen","isRouterTargeted","type","CLOSE_DRAWER","BACK","OPEN_DRAWER","TOGGLE_DRAWER","switchedState"],"sources":["DrawerRouter.tsx"],"sourcesContent":["import {\n  SwitchRouter,\n  NavigationActions,\n  NavigationAction,\n  NavigationRoute,\n  NavigationRouteConfigMap,\n} from 'react-navigation';\nimport * as DrawerActions from './DrawerActions';\n\ntype State = NavigationRoute & {\n  isDrawerOpen?: any;\n};\n\nfunction withDefaultValue(obj: object, key: string, defaultValue: any): any {\n  // @ts-ignore\n  if (obj.hasOwnProperty(key) && typeof obj[key] !== 'undefined') {\n    return obj;\n  }\n\n  // @ts-ignore\n  obj[key] = defaultValue;\n  return obj;\n}\n\nconst getActiveRouteKey = (route: NavigationRoute): string => {\n  if (\n    route.routes &&\n    typeof route.index === 'number' &&\n    route.routes[route.index]\n  ) {\n    return getActiveRouteKey(route.routes[route.index]);\n  }\n\n  return route.key;\n};\n\nexport default (\n  routeConfigs: NavigationRouteConfigMap<any, any>,\n  config: {\n    unmountInactiveRoutes?: boolean;\n    resetOnBlur?: boolean;\n    initialRouteName?: string;\n  } = {}\n) => {\n  config = { ...config };\n  config = withDefaultValue(\n    config,\n    'resetOnBlur',\n    config.unmountInactiveRoutes ? true : !!config.resetOnBlur\n  );\n  config = withDefaultValue(config, 'backBehavior', 'initialRoute');\n\n  const switchRouter = SwitchRouter(routeConfigs, config);\n\n  return {\n    ...switchRouter,\n\n    getActionCreators(route: NavigationRoute, navStateKey: string) {\n      return {\n        openDrawer: () => DrawerActions.openDrawer({ key: navStateKey }),\n        closeDrawer: () => DrawerActions.closeDrawer({ key: navStateKey }),\n        toggleDrawer: () => DrawerActions.toggleDrawer({ key: navStateKey }),\n        ...switchRouter.getActionCreators(route, navStateKey),\n      };\n    },\n\n    getStateForAction(action: NavigationAction, state?: State) {\n      // Set up the initial state if needed\n      if (!state) {\n        return {\n          ...switchRouter.getStateForAction(action, undefined),\n          isDrawerOpen: false,\n        };\n      }\n\n      const isRouterTargeted = action.key == null || action.key === state.key;\n\n      if (isRouterTargeted) {\n        // Only handle actions that are meant for this drawer, as specified by action.key.\n        if (\n          action.type === DrawerActions.CLOSE_DRAWER ||\n          (action.type === NavigationActions.BACK && state.isDrawerOpen)\n        ) {\n          return {\n            ...state,\n            isDrawerOpen: false,\n          };\n        }\n\n        if (action.type === DrawerActions.OPEN_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: true,\n          };\n        }\n\n        if (action.type === DrawerActions.TOGGLE_DRAWER) {\n          return {\n            ...state,\n            isDrawerOpen: !state.isDrawerOpen,\n          };\n        }\n      }\n\n      // Fall back on switch router for screen switching logic, and handling of child routers\n      const switchedState = switchRouter.getStateForAction(action, state);\n\n      if (switchedState === null) {\n        // The switch router or a child router is attempting to swallow this action. We return null to allow this.\n        return null;\n      }\n\n      // Has the switch router changed the state?\n      if (switchedState !== state) {\n        // If any navigation has happened, and the drawer is maybe open, make sure to close it\n        if (\n          getActiveRouteKey(switchedState) !== getActiveRouteKey(state) &&\n          state.isDrawerOpen\n        ) {\n          return {\n            ...switchedState,\n            isDrawerOpen: false,\n          };\n        }\n\n        // At this point, return the state as defined by the switch router.\n        // The active route key hasn't changed, so this most likely means that a child router has returned\n        // a new state like a param change, but the same key is still active and the drawer will remain open\n        return switchedState;\n      }\n\n      return state;\n    },\n  };\n};\n"],"mappings":"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"}