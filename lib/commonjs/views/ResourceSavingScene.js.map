{"version":3,"names":["FAR_FAR_AWAY","ResourceSavingScene","React","Component","render","screensEnabled","props","enabled","Platform","OS","isVisible","rest","shouldUseActivityState","children","style","styles","container","display","attached","detached","StyleSheet","create","flex","overflow","top"],"sources":["ResourceSavingScene.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  style?: any;\n  enabled: boolean;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component<Props> {\n  render() {\n    // react-native-screens is buggy on web\n    if (screensEnabled?.() && this.props.enabled && Platform.OS !== 'web') {\n      const { isVisible, ...rest } = this.props;\n\n      if (shouldUseActivityState) {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen activityState={isVisible ? 2 : 0} {...rest} />\n        );\n      } else {\n        return (\n          // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n          <Screen active={isVisible ? 1 : 0} {...rest} />\n        );\n      }\n    }\n\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return (\n      <View\n        style={[\n          styles.container,\n          Platform.OS === 'web'\n            ? { display: isVisible ? 'flex' : 'none' }\n            : null,\n          style,\n        ]}\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAcA,MAAMA,YAAY,GAAG,KAArB,C,CAA4B;;AAEb,MAAMC,mBAAN,SAAkCC,KAAK,CAACC,SAAxC,CAAyD;EACtEC,MAAM,GAAG;IACP;IACA,IAAIC,kCAAA,aAAAA,kCAAA,mBAAAA,kCAAA,OAAsB,KAAKC,KAAL,CAAWC,OAAjC,IAA4CC,qBAAA,CAASC,EAAT,KAAgB,KAAhE,EAAuE;MACrE,MAAM;QAAEC,SAAF;QAAa,GAAGC;MAAhB,IAAyB,KAAKL,KAApC;;MAEA,IAAIM,0CAAJ,EAA4B;QAC1B;UAAA;UACE;UACA,oBAAC,0BAAD;YAAQ,aAAa,EAAEF,SAAS,GAAG,CAAH,GAAO;UAAvC,GAA8CC,IAA9C;QAFF;MAID,CALD,MAKO;QACL;UAAA;UACE;UACA,oBAAC,0BAAD;YAAQ,MAAM,EAAED,SAAS,GAAG,CAAH,GAAO;UAAhC,GAAuCC,IAAvC;QAFF;MAID;IACF;;IAED,MAAM;MAAED,SAAF;MAAaG,QAAb;MAAuBC,KAAvB;MAA8B,GAAGH;IAAjC,IAA0C,KAAKL,KAArD;IAEA,oBACE,oBAAC,iBAAD;MACE,KAAK,EAAE,CACLS,MAAM,CAACC,SADF,EAELR,qBAAA,CAASC,EAAT,KAAgB,KAAhB,GACI;QAAEQ,OAAO,EAAEP,SAAS,GAAG,MAAH,GAAY;MAAhC,CADJ,GAEI,IAJC,EAKLI,KALK,CADT;MAQE,WAAW,EAAE,KARf;MASE,qBAAqB,EACnB;MACA;MACAN,qBAAA,CAASC,EAAT,KAAgB,KAAhB,GAAwB,CAACC,SAAzB,GAAqC,IAZzC;MAcE,aAAa,EAAEA,SAAS,GAAG,MAAH,GAAY;IAdtC,GAeMC,IAfN,gBAiBE,oBAAC,iBAAD;MAAM,KAAK,EAAED,SAAS,GAAGK,MAAM,CAACG,QAAV,GAAqBH,MAAM,CAACI;IAAlD,GACGN,QADH,CAjBF,CADF;EAuBD;;AA5CqE;;;;AA+CxE,MAAME,MAAM,GAAGK,uBAAA,CAAWC,MAAX,CAAkB;EAC/BL,SAAS,EAAE;IACTM,IAAI,EAAE,CADG;IAETC,QAAQ,EAAE;EAFD,CADoB;EAK/BL,QAAQ,EAAE;IACRI,IAAI,EAAE;EADE,CALqB;EAQ/BH,QAAQ,EAAE;IACRG,IAAI,EAAE,CADE;IAERE,GAAG,EAAExB;EAFG;AARqB,CAAlB,CAAf"}