{"version":3,"names":["DrawerSidebar","React","PureComponent","routeKey","descriptor","props","descriptors","options","Error","focused","tintColor","route","drawerLabel","title","getScreenOptions","key","routeName","drawerIcon","navigation","closeDrawer","dispatch","NavigationActions","navigate","render","ContentComponent","contentComponent","state","index","styles","container","style","contentOptions","drawerOpenProgress","routes","screenProps","getLabel","renderIcon","handleItemPress","drawerPosition","StyleSheet","create","flex"],"sources":["DrawerSidebar.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleSheet, View, ViewStyle } from 'react-native';\nimport {\n  NavigationActions,\n  NavigationRoute,\n  NavigationScreenProp,\n} from 'react-navigation';\nimport Animated from 'react-native-reanimated';\nimport {\n  Scene,\n  NavigationDrawerState,\n  DrawerContentComponentProps,\n  SceneDescriptorMap,\n} from '../types';\n\ntype Props = {\n  contentComponent?: React.ComponentType<DrawerContentComponentProps>;\n  contentOptions?: object;\n  screenProps?: unknown;\n  navigation: NavigationScreenProp<NavigationDrawerState>;\n  descriptors: SceneDescriptorMap;\n  drawerOpenProgress: Animated.Node<number>;\n  drawerPosition: 'left' | 'right';\n  style?: ViewStyle;\n};\n\n/**\n * Component that renders the sidebar screen of the drawer.\n */\nclass DrawerSidebar extends React.PureComponent<Props> {\n  private getScreenOptions = (routeKey: string) => {\n    const descriptor = this.props.descriptors[routeKey];\n\n    if (!descriptor.options) {\n      throw new Error(\n        'Cannot access screen descriptor options from drawer sidebar'\n      );\n    }\n\n    return descriptor.options;\n  };\n\n  private getLabel = ({ focused, tintColor, route }: Scene) => {\n    const { drawerLabel, title } = this.getScreenOptions(route.key);\n    if (drawerLabel) {\n      return typeof drawerLabel === 'function'\n        ? drawerLabel({ tintColor, focused })\n        : drawerLabel;\n    }\n\n    if (typeof title === 'string') {\n      return title;\n    }\n\n    return route.routeName;\n  };\n\n  private renderIcon = ({ focused, tintColor, route }: Scene) => {\n    const { drawerIcon } = this.getScreenOptions(route.key);\n    if (drawerIcon) {\n      return typeof drawerIcon === 'function'\n        ? drawerIcon({ tintColor, focused })\n        : drawerIcon;\n    }\n    return null;\n  };\n\n  private handleItemPress = ({\n    route,\n    focused,\n  }: {\n    route: NavigationRoute;\n    focused: boolean;\n  }) => {\n    if (focused) {\n      // @ts-ignore\n      this.props.navigation.closeDrawer();\n    } else {\n      this.props.navigation.dispatch(\n        NavigationActions.navigate({ routeName: route.routeName })\n      );\n    }\n  };\n\n  render() {\n    const ContentComponent = this.props.contentComponent;\n\n    if (!ContentComponent) {\n      return null;\n    }\n\n    const { state } = this.props.navigation;\n\n    if (typeof state.index !== 'number') {\n      throw new Error(\n        'The index of the route should be state in the navigation state'\n      );\n    }\n\n    return (\n      <View style={[styles.container, this.props.style]}>\n        <ContentComponent\n          {...this.props.contentOptions}\n          navigation={this.props.navigation}\n          descriptors={this.props.descriptors}\n          drawerOpenProgress={this.props.drawerOpenProgress}\n          items={state.routes}\n          activeItemKey={\n            state.routes[state.index] ? state.routes[state.index].key : null\n          }\n          screenProps={this.props.screenProps}\n          getLabel={this.getLabel}\n          renderIcon={this.renderIcon}\n          onItemPress={this.handleItemPress}\n          drawerPosition={this.props.drawerPosition}\n        />\n      </View>\n    );\n  }\n}\n\nexport default DrawerSidebar;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n"],"mappings":"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"}