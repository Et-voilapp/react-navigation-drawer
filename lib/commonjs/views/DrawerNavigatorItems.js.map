{"version":3,"names":["DrawerNavigatorItems","React","Component","getActiveTintColor","activeTintColor","props","context","getInactiveTintColor","inactiveTintColor","getActiveBackgroundColor","activeBackgroundColor","getInactiveBackgroundColor","inactiveBackgroundColor","render","items","activeItemKey","getLabel","renderIcon","onItemPress","itemsContainerStyle","itemStyle","labelStyle","activeLabelStyle","inactiveLabelStyle","iconContainerStyle","drawerPosition","styles","container","map","route","index","focused","key","color","backgroundColor","scene","tintColor","icon","label","accessibilityLabel","undefined","extraLabelStyle","item","vertical","inactiveIcon","light","dark","ThemeContext","StyleSheet","create","paddingVertical","flexDirection","alignItems","marginHorizontal","width","opacity","margin","fontWeight"],"sources":["DrawerNavigatorItems.tsx"],"sourcesContent":["import * as React from 'react';\nimport { View, Text, StyleSheet } from 'react-native';\nimport { SafeAreaView, ThemeContext } from 'react-navigation';\nimport TouchableItem from './TouchableItem';\nimport { DrawerNavigatorItemsProps } from '../types';\n\n/**\n * Component that renders the navigation list in the drawer.\n */\nexport default class DrawerNavigatorItems extends React.Component<\n  DrawerNavigatorItemsProps\n> {\n  /* Material design specs - https://material.io/guidelines/patterns/navigation-drawer.html#navigation-drawer-specs */\n  static defaultProps = {\n    activeTintColor: {\n      light: '#2196f3',\n      dark: '#fff',\n    },\n    activeBackgroundColor: {\n      light: 'rgba(0, 0, 0, .04)',\n      dark: 'rgba(255, 255, 255, .04)',\n    },\n    inactiveTintColor: {\n      light: 'rgba(0, 0, 0, .87)',\n      dark: 'rgba(255, 255, 255, .87)',\n    },\n    inactiveBackgroundColor: {\n      light: 'transparent',\n      dark: 'transparent',\n    },\n  };\n\n  static contextType = ThemeContext;\n  context!: React.ContextType<typeof ThemeContext>;\n\n  private getActiveTintColor() {\n    let { activeTintColor } = this.props;\n    if (!activeTintColor) {\n      return;\n    } else if (typeof activeTintColor === 'string') {\n      return activeTintColor;\n    }\n\n    return activeTintColor[this.context];\n  }\n\n  private getInactiveTintColor() {\n    let { inactiveTintColor } = this.props;\n    if (!inactiveTintColor) {\n      return;\n    } else if (typeof inactiveTintColor === 'string') {\n      return inactiveTintColor;\n    }\n\n    return inactiveTintColor[this.context];\n  }\n\n  private getActiveBackgroundColor() {\n    let { activeBackgroundColor } = this.props;\n    if (!activeBackgroundColor) {\n      return;\n    } else if (typeof activeBackgroundColor === 'string') {\n      return activeBackgroundColor;\n    }\n\n    return activeBackgroundColor[this.context];\n  }\n\n  private getInactiveBackgroundColor() {\n    let { inactiveBackgroundColor } = this.props;\n    if (!inactiveBackgroundColor) {\n      return;\n    } else if (typeof inactiveBackgroundColor === 'string') {\n      return inactiveBackgroundColor;\n    }\n\n    return inactiveBackgroundColor[this.context];\n  }\n\n  render() {\n    const {\n      items,\n      activeItemKey,\n      getLabel,\n      renderIcon,\n      onItemPress,\n      itemsContainerStyle,\n      itemStyle,\n      labelStyle,\n      activeLabelStyle,\n      inactiveLabelStyle,\n      iconContainerStyle,\n      drawerPosition,\n    } = this.props;\n\n    const activeTintColor = this.getActiveTintColor();\n    const activeBackgroundColor = this.getActiveBackgroundColor();\n    const inactiveTintColor = this.getInactiveTintColor();\n    const inactiveBackgroundColor = this.getInactiveBackgroundColor();\n\n    return (\n      <View style={[styles.container, itemsContainerStyle]}>\n        {items.map((route, index: number) => {\n          const focused = activeItemKey === route.key;\n          const color = focused ? activeTintColor : inactiveTintColor;\n          const backgroundColor = focused\n            ? activeBackgroundColor\n            : inactiveBackgroundColor;\n          const scene = { route, index, focused, tintColor: color };\n          const icon = renderIcon(scene);\n          const label = getLabel(scene);\n          const accessibilityLabel =\n            typeof label === 'string' ? label : undefined;\n          const extraLabelStyle = focused\n            ? activeLabelStyle\n            : inactiveLabelStyle;\n          return (\n            <TouchableItem\n              key={route.key}\n              accessible\n              accessibilityLabel={accessibilityLabel}\n              onPress={() => {\n                onItemPress({ route, focused });\n              }}\n              delayPressIn={0}\n            >\n              <SafeAreaView\n                style={[{ backgroundColor }, styles.item, itemStyle]}\n                forceInset={{\n                  [drawerPosition]: 'always',\n                  [drawerPosition === 'left' ? 'right' : 'left']: 'never',\n                  vertical: 'never',\n                }}\n              >\n                {icon ? (\n                  <View\n                    style={[\n                      styles.icon,\n                      focused ? null : styles.inactiveIcon,\n                      iconContainerStyle,\n                    ]}\n                  >\n                    {icon}\n                  </View>\n                ) : null}\n                {typeof label === 'string' ? (\n                  <Text\n                    style={[\n                      styles.label,\n                      { color },\n                      labelStyle,\n                      extraLabelStyle,\n                    ]}\n                  >\n                    {label}\n                  </Text>\n                ) : (\n                  label\n                )}\n              </SafeAreaView>\n            </TouchableItem>\n          );\n        })}\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 4,\n  },\n  item: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  icon: {\n    marginHorizontal: 16,\n    width: 24,\n    alignItems: 'center',\n  },\n  inactiveIcon: {\n    /*\n     * Icons have 0.54 opacity according to guidelines\n     * 100/87 * 54 ~= 62\n     */\n    opacity: 0.62,\n  },\n  label: {\n    margin: 16,\n    fontWeight: 'bold',\n  },\n});\n"],"mappings":"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"}